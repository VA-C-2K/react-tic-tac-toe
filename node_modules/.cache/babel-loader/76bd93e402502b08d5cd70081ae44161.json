{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\tic-tac-toe\\\\src\\\\components\\\\Game.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useReducer } from \"react/cjs/react.development\";\nimport { Board } from \"./Board\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'JUMP':\n      return { ...state,\n        xIsNext: action.payload.step % 2 === 0,\n        history: state.history.slice(0, action.payload.step + 1)\n      };\n\n    case 'MOVE':\n      return { ...state,\n        history: state.history.concat({\n          squares: action.payload.squares\n        }),\n        xIsNext: !state.xIsNext\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function Game() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    xIsNext: true,\n    history: [{\n      squares: Array(9).fill(null)\n    }]\n  });\n  const {\n    xIsNext,\n    history\n  } = state;\n\n  const jumpTo = step => {\n    dispatch({\n      type: 'JUMP',\n      payload: {\n        step\n      }\n    });\n  };\n\n  const handleClick = i => {\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    const winner = calculateWinner(squares);\n\n    if (winner || squares[i]) {\n      return;\n    }\n\n    squares[i] = xIsNext ? 'X' : 'O';\n    dispatch({\n      type: 'MOVE',\n      payload: {\n        squares\n      }\n    });\n  };\n\n  const current = history[history.length - 1];\n  const winner = calculateWinner(current.squares);\n  const status = winner ? winner === 'D' ? 'Draw' : 'Winner is ' + winner : 'Next player is ' + (xIsNext ? 'X' : 'O');\n  const moves = history.map((step, move) => {\n    const desc = move ? 'Go to #' + move : 'Start the Game';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        onClick: i => handleClick(i),\n        squares: current.squares\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Game, \"VZ+KC/+tUQSPTQA37eGIXZ8Mm5s=\");\n\n_c = Game;\n\nconst calculateWinner = squares => {\n  return null;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["E:/React/tic-tac-toe/src/components/Game.jsx"],"names":["React","useReducer","Board","reducer","state","action","type","xIsNext","payload","step","history","slice","concat","squares","Game","dispatch","Array","fill","jumpTo","handleClick","i","current","length","winner","calculateWinner","status","moves","map","move","desc"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useReducer } from \"react/cjs/react.development\";\r\nimport { Board } from \"./Board\";\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'JUMP':\r\n        return {\r\n          ...state,\r\n          xIsNext: action.payload.step % 2 === 0,\r\n          history: state.history.slice(0, action.payload.step + 1),\r\n        };\r\n      case 'MOVE':\r\n        return {\r\n          ...state,\r\n          history: state.history.concat({\r\n            squares: action.payload.squares,\r\n          }),\r\n          xIsNext: !state.xIsNext,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default function Game() {\r\n    const [state, dispatch] = useReducer(reducer, {\r\n      xIsNext: true,\r\n      history: [{ squares: Array(9).fill(null) }],\r\n    });\r\n    const { xIsNext, history } = state;\r\n    const jumpTo = (step) => {\r\n      dispatch({ type: 'JUMP', payload: { step } });\r\n    };\r\n    const handleClick = (i) => {\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n      const winner = calculateWinner(squares);\r\n      if (winner || squares[i]) {\r\n        return;\r\n      }\r\n      squares[i] = xIsNext ? 'X' : 'O';\r\n      dispatch({ type: 'MOVE', payload: { squares } });\r\n    };\r\n    const current = history[history.length - 1];\r\n    const winner = calculateWinner(current.squares);\r\n  \r\n    const status = winner\r\n      ? winner === 'D'\r\n        ? 'Draw'\r\n        : 'Winner is ' + winner\r\n      : 'Next player is ' + (xIsNext ? 'X' : 'O');\r\n  \r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? 'Go to #' + move : 'Start the Game';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n  \r\n    return (\r\n      <div className= 'game'>\r\n        <div className=\"game-board\">\r\n          <Board\r\n            onClick={(i) => handleClick(i)}\r\n            squares={current.squares}\r\n          ></Board>\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ul>{moves}</ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\nconst calculateWinner = (squares) =>{\r\n    return null;\r\n}"]},"metadata":{},"sourceType":"module"}