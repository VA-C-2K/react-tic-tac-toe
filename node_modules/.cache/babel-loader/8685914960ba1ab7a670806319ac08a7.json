{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\tic-tac-toe\\\\src\\\\components\\\\Game.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useReducer } from \"react/cjs/react.development\";\nimport { Board } from \"./Board\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'JUMP':\n      return { ...state,\n        xIsNext: action.payload.step % 2 === 0,\n        history: state.history.slice(0, action.payload.step + 1)\n      };\n\n    case 'MOVE':\n      return { ...state,\n        history: state.history.concat({\n          sqaures: action.payload.sqaures\n        }),\n        xIsNext: !state.isNext\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const Game = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    xIsNext: true,\n    history: [{\n      sqaures: Array(9).fill(null)\n    }]\n  });\n  const {\n    xIsNext,\n    history\n  } = state;\n\n  const jumpTo = step => {\n    dispatch({\n      type: 'JUMP',\n      payload: {\n        step\n      }\n    });\n  };\n\n  const handleClick = i => {\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    const winner = calculateWinner(squares);\n\n    if (winner || squares[i]) {\n      return;\n    }\n\n    squares[i] = xIsNext ? 'X' : 'O';\n    dispatch({\n      type: 'MOVE',\n      payload: {\n        squares\n      }\n    });\n  };\n\n  const current = history[history.length - 1];\n  const winner = calculateWinner(current.squares);\n  const status = winner ? winner === 'D' ? 'Draw' : 'Winner is ' + winner : 'Next player is' + (xIsNext ? 'X' : 'O');\n  const moves = history.map((step, move) => {\n    const desc = move ? 'Go to #' + move : 'Start the Game';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 31\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        onClick: i => handleClick(i),\n        squares: current.sqaures\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"vEVjLntLHs7wnZI8ThLp0ckoaOw=\");\n\n_c = Game;\n\nconst calculateWinner = squares => {\n  return null;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["E:/React/tic-tac-toe/src/components/Game.jsx"],"names":["React","useReducer","Board","reducer","state","action","type","xIsNext","payload","step","history","slice","concat","sqaures","isNext","Game","dispatch","Array","fill","jumpTo","handleClick","i","current","length","squares","winner","calculateWinner","status","moves","map","move","desc"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useReducer } from \"react/cjs/react.development\";\r\nimport { Board } from \"./Board\";\r\n\r\n\r\nconst reducer= (state,action)=>{\r\n    switch (action.type){\r\n        case 'JUMP':\r\n            return {...state,\r\n            xIsNext: action.payload.step%2 ===0,\r\n            history: state.history.slice(0,action.payload.step + 1),\r\n        };\r\n        case 'MOVE':\r\n            return{...state,history:state.history.concat({\r\n                sqaures:action.payload.sqaures,\r\n            }),\r\n            xIsNext: !state.isNext,\r\n        };\r\n        default:\r\n            return state;\r\n    }\r\n} \r\nexport const Game = () => {\r\n    const [state,dispatch] = useReducer(reducer,{\r\n        xIsNext: true,\r\n        history :[{sqaures:Array(9).fill(null)}],\r\n    });\r\n    const {xIsNext, history} =  state;\r\n    const jumpTo = (step)  =>{\r\n        dispatch({\r\n            type:'JUMP', payload: {step}\r\n        });\r\n    }\r\n    const handleClick = (i) =>{\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        const winner = calculateWinner(squares);\r\n        if (winner || squares[i]){\r\n            return;\r\n        }\r\n        squares[i] = xIsNext ? 'X':'O';\r\n        dispatch({type:'MOVE',payload:{squares}});\r\n\r\n    }\r\n    const current = history[history.length - 1];\r\n    const winner = calculateWinner(current.squares);\r\n    const status = winner ? winner === 'D' ? 'Draw': 'Winner is ' + winner:'Next player is' + (xIsNext?'X':'O');\r\n    const moves = history.map((step, move) =>{\r\n        const desc = move ? 'Go to #'+ move :'Start the Game';\r\n        return <li key={move}><button onClick={()=>jumpTo(move)}>{desc}</button></li>\r\n    })\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game-board\">\r\n        <Board onClick={(i) => handleClick(i)} squares={current.sqaures}></Board>\r\n      </div>\r\n      <div className=\"game-info\">\r\n        <div>{status}</div>\r\n        <ul>{moves}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst calculateWinner = (squares) =>{\r\n    return null;\r\n}"]},"metadata":{},"sourceType":"module"}